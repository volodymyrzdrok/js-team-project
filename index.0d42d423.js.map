{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SCAAC,EAAAD,EAAA,S,4EAOsBE,I,OAAAA,EAAfC,EAAAF,EAAA,CAAAE,EAAAC,GAAAC,MAAA,SAAAC,I,4FAEkB,EAAAC,EAAAC,uB,OACrBC,EADYC,EAAAC,M,iDAGZ,EAAAC,EAAAC,UAAQH,EAAAI,I,0DAL4BC,MAAAC,KAAAC,U,CASxC,SAASR,EAAUS,GACjB,IAAQC,EAAkCpB,EAAAqB,KAAlCD,YAAaE,EAAqBtB,EAAAqB,KAArBC,iBACfC,EAAaJ,EAAXI,OACR,IAAKA,EAGH,OAFAD,EAAiBE,YAAc,kDAC/BC,iBAAiBL,GAGnBE,EAAiBE,YAAc,aAE/B,EAAAX,EAAAa,sBAAqBN,EAAaO,EAAAC,yBAA0BL,E,uBC1B9DrB,EAAAD,EAAA,S,0EASsB4B,I,OAAAA,EAAfzB,EAAAF,EAAA,CAAAE,EAAAC,GAAAC,MAAA,SAAAC,EAAkCuB,G,IAEjCC,EAGEC,E,qEAJRF,EAAEG,iBACIF,EAAQD,EAAEI,OAAOC,YAAYJ,MAAMK,cAAcC,OAC7C,C,0EAEa,EAAA7B,EAAA8B,qBAAoBP,G,OAAnCC,EAAMrB,EAAAC,KAEZ2B,QAAQC,IAAIR,GACZS,EAAUT,GAEVF,EAAEI,OAAOQ,Q,mDAET,EAAA7B,EAAAC,UAAQH,EAAAI,I,2DAZ4BC,MAAAC,KAAAC,U,CAgBxC,SAASuB,EAAUtB,GACjB,IAAQC,EAAkCpB,EAAAqB,KAAlCD,YAAaE,EAAqBtB,EAAAqB,KAArBC,iBACfC,EAAaJ,EAAXI,OAER,IAAKA,EAGH,OAFAD,EAAiBE,YAAc,kDAC/B,EAAAX,EAAAY,kBAAiBL,GAGnBE,EAAiBE,YAAc,qBAC/B,EAAAX,EAAAa,sBAAqBN,EAAaO,EAAAC,yBAA0BL,E,CCnC9DrB,EAAAD,EAAA,S,0EASsB0C,I,OAAAA,EAAfvC,EAAAF,EAAA,CAAAE,EAAAC,GAAAC,MAAA,SAAAC,EAAoCuB,G,IACnCc,EAGAC,E,qEAHAD,EAAKd,EAAEI,OAAOY,QAAQ,kBAErB,C,uDACDD,EAASD,EAAGpB,YAAYY,c,mBAGP,EAAA5B,EAAAuC,uBAAsBF,G,OAC3CG,EADYrC,EAAAC,M,mDAGZ,EAAAC,EAAAC,UAAQH,EAAAI,I,2DAV8BC,MAAAC,KAAAC,U,CAc1C,SAAS8B,EAAU7B,GACjB,IAAQC,EAAkCpB,EAAAqB,KAAlCD,YAAaE,EAAqBtB,EAAAqB,KAArBC,iBACfC,EAAaJ,EAAXI,OAER,IAAKA,EAGH,OAFAD,EAAiBE,YAAc,kDAC/B,EAAAX,EAAAY,kBAAiBL,GAGnBE,EAAiBE,YAAc,qBAC/B,EAAAX,EAAAa,sBAAqBN,EAAaO,EAAAC,yBAA0BL,E,8BF1BxCpB,EAAkBa,MAAAC,KAAAC,U,CDCxC,GAEAlB,EAAAqB,KAAK4B,WAAWC,iBAAiB,U,SEDQpB,G,OAAnBD,EAAkBb,MAAAC,KAAAC,U,IFExClB,EAAAqB,KAAK8B,YAAYD,iBAAiB,S,SGFSpB,G,OAArBa,EAAoB3B,MAAAC,KAAAC,U,IHG1ClB,EAAAqB,KAAKD,YAAY8B,iBAAiB,QAASE,EAAAC,gB","sources":["src/index.js","src/js/getProducts/getRandomCocktails.js","src/js/getProducts/getCocktailsByName.js","src/js/getProducts/getCocktailsByLetter.js"],"sourcesContent":["import { refs } from './js/refs/refs';\nimport { getRandomCocktails } from './js/getProducts/getRandomCocktails';\nimport { getCocktailsByName } from './js/getProducts/getCocktailsByName';\nimport { getCocktailsByLetter } from './js/getProducts/getCocktailsByLetter';\nimport { getInfoCocktail } from './js/getProducts/getInfoCocktail';\n// import { getFavorCoctails } from './js/getProducts/getFavorCoctails';\n\n// getFavorCoctails();\ngetRandomCocktails();\n\nrefs.formSearch.addEventListener('submit', getCocktailsByName);\nrefs.lettersList.addEventListener('click', getCocktailsByLetter);\nrefs.productList.addEventListener('click', getInfoCocktail);\n","import { onReject, renderElementsMarkup } from '../utils/utils';\nimport { fetchProductsRandom } from '../api/api';\nimport { refs } from '../refs/refs';\nimport { markupSearchingCocktails } from '../templates/markupSearchingCocktails';\nimport { getDataLocalStorage } from '../api/localStorageFavcCocktails';\nimport { FAV_COCKTAILS, FAV_INGREDIENTS } from '../utils/constans';\n\nexport async function getRandomCocktails() {\n  try {\n    const result = await fetchProductsRandom();\n    onResolve(result);\n  } catch (error) {\n    onReject(error);\n  }\n}\n\nfunction onResolve(data) {\n  const { productList, productListTitle } = refs;\n  const { drinks } = data;\n  if (!drinks) {\n    productListTitle.textContent = \"Sorry, we didn't find any cocktail for you\";\n    clearDomELements(productList);\n    return;\n  }\n  productListTitle.textContent = 'Cocktails';\n\n  renderElementsMarkup(productList, markupSearchingCocktails, drinks);\n}\n","import {\n  clearDomELements,\n  onReject,\n  renderElementsMarkup,\n} from '../utils/utils';\nimport { fetchProductsByName } from '../api/api';\nimport { refs } from '../refs/refs';\nimport { markupSearchingCocktails } from '../templates/markupSearchingCocktails';\n\nexport async function getCocktailsByName(e) {\n  e.preventDefault();\n  const value = e.target.searchinput.value.toLowerCase().trim();\n  if (!value) return;\n  try {\n    const result = await fetchProductsByName(value);\n\n    console.log(result);\n    onResolve(result);\n\n    e.target.reset();\n  } catch (error) {\n    onReject(error);\n  }\n}\n\nfunction onResolve(data) {\n  const { productList, productListTitle } = refs;\n  const { drinks } = data;\n\n  if (!drinks) {\n    productListTitle.textContent = \"Sorry, we didn't find any cocktail for you\";\n    clearDomELements(productList);\n    return;\n  }\n  productListTitle.textContent = 'Searching results';\n  renderElementsMarkup(productList, markupSearchingCocktails, drinks);\n}\n","import {\n  clearDomELements,\n  onReject,\n  renderElementsMarkup,\n} from '../utils/utils';\nimport { fetchProductsByLetter } from '../api/api';\nimport { refs } from '../refs/refs';\nimport { markupSearchingCocktails } from '../templates/markupSearchingCocktails';\n\nexport async function getCocktailsByLetter(e) {\n  const el = e.target.closest('.letters__link');\n\n  if (!el) return;\n  const letter = el.textContent.toLowerCase();\n\n  try {\n    const result = await fetchProductsByLetter(letter);\n    onResolve(result);\n  } catch (error) {\n    onReject(error);\n  }\n}\n\nfunction onResolve(data) {\n  const { productList, productListTitle } = refs;\n  const { drinks } = data;\n\n  if (!drinks) {\n    productListTitle.textContent = \"Sorry, we didn't find any cocktail for you\";\n    clearDomELements(productList);\n    return;\n  }\n  productListTitle.textContent = 'Searching results';\n  renderElementsMarkup(productList, markupSearchingCocktails, drinks);\n}\n"],"names":["$cqmI4","parcelRequire","$bpxeT","$f308184d92235dd6$var$_getRandomCocktails","$parcel$interopDefault","$2TvXO","mark","_callee","$1X4Nb","fetchProductsRandom","$f308184d92235dd6$var$onResolve","_ctx","sent","$5mnqR","onReject","t0","apply","this","arguments","data","productList","refs","productListTitle","drinks","textContent","clearDomELements","renderElementsMarkup","$e5Gor","markupSearchingCocktails","$e71cd8670f96b702$var$_getCocktailsByName","e","value","result","preventDefault","target","searchinput","toLowerCase","trim","fetchProductsByName","console","log","$e71cd8670f96b702$var$onResolve","reset","$a64fb189733ebea0$var$_getCocktailsByLetter","el","letter","closest","fetchProductsByLetter","$a64fb189733ebea0$var$onResolve","formSearch","addEventListener","lettersList","$cqzQn","getInfoCocktail"],"version":3,"file":"index.0d42d423.js.map"}